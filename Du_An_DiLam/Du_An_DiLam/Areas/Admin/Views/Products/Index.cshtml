@*//@model IEnumerable<Data.DataModel.Product>*@
@model Data.DataModel.Product

@{
    ViewBag.Title = "Sản phẩm chung";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-lg-12">
        <div class="panel panel-default">
            <div class="panel-heading">
            Sản phẩm
            </div>

            <!-- /.panel-heading -->
            <div class="panel-body">
                <div class="col-md-12">
                    <div class="col-md-6">
                        <input type="text" id="txtSearch" class="form-control" placeholder="Search">

                    </div>
                    <div class="col-md-2">
                        <select class="form-control" id="txtSelect" onclick="changeNum();" >
                            <option value="Name">Tên</option>
                            <option value="Price">Giá</option>
                        </select>
                        
                    </div>
                    <div  class="col-md-2">
                        <select class="form-control" id="Status">
                            <option value="">Tất cả</option>
                            <option value="true">Hiển thị</option>
                            <option value="false">Không hiển thị</option>
                        </select>
                    </div>


                </div>
                <div class="col-md-12"><br /></div>
                <div class="col-md-6">
                    <label>


                        <button>  <a data-toggle="modal" data-target="#myModal">Thêm mới</a></button>
                        <button id="btn-edit" class="btn-warning">Sửa</button>
                        <button id="btn-delete" class="btn-danger">Xóa</button>
                        <button id="btn-detail">Chi tiết</button>
                    </label>
                </div>

                <!-- Button to Open the Modal -->
                <!-- The Modal -->

                <div class="modal" id="myModal">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <!-- Modal Header -->
                            <div class="modal-header">
                                <h4 class="modal-title">Sản phẩm</h4>

                                       
                            </div>

                            <!-- Modal body -->
                            

                            <div class="form-horizontal">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control Name" } })

                                    </div>
                                </div>

                                <div class="form-group">
                                    <label class="control-label col-md-2">Danh mục</label>
                                    <div class="col-md-10">
                                        @Html.DropDownList("CategoryDetailId", null, htmlAttributes: new { @class = "form-control CategoryDetailId" })

                                    </div>
                                </div>

                                <div class="form-group">
                                    <label class="control-label col-md-2">Thương hiệu</label>
                                    <div class="col-md-10">
                                        @Html.DropDownList("SupplierId", null, htmlAttributes: new { @class = "form-control SupplierId" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Picture, htmlAttributes: new { @class = "control-label col-md-2  " })
                                    <div class="col-md-10">
                                        <input type="file" multiple="" name="fileUpload" onchange="loadFile(event)" id="fileInput" value="" />
                                        
                                    </div>
                                    <div class="col-md-10">
                                        <div id="show_img"></div>
                                    </div>
                                </div>
                               

                                
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control Des" } })

                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control Price" } })

                                    </div>
                                </div>

                                <div class="form-group">
                                    <label class="control-label col-md-2">Giá khuyến mãi</label>
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.PriceSale, new { htmlAttributes = new { @class = "form-control PriceSale", @Value = 0 } })

                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Show, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        <div class="checkbox">
                                            @Html.EditorFor(model => model.Show, new { htmlAttributes = new { @class = "form-control Show" } })

                                        </div>
                                    </div>
                                </div>
                                <br />
                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-10">
                                        <button type="submit" class="btn btn-default" id="btn-save">Lưu</button>
                                        <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
                                    </div>
                                </div>
                            </div>
                            
                            <!-- Modal footer -->
                            <div class="modal-footer">
                                
                                
                            </div>
                        </div>
                    </div>
                </div>
                
                <table width="100%" class="table-bordered" id="dataTables-example">
                    <thead>
                        <tr>
                            <th>Tên sản phẩm</th>
                            <th>ảnh </th>
                            <th> Giá</th>
                            <th> Giá khuyến mãi</th>
                            <th>Trạng thái</th>
                   


                        </tr>
                    </thead>
                    <tbody id="data"></tbody>

                </table>

                <!-- /.table-responsive -->
                <ul class="pagination" id="pageData"></ul>
            </div>
            <!-- /.panel-body -->
        </div>

        
        <!-- /.panel -->
    </div>
    <!--s
        /.col-lg-12 -->

 
</div>

@section scripts{
    <script>


        function LoadData(pageNumber, pageSize, txtSearch, txtSelect, txtStatus) {
            $.ajax({
                type: 'GET',
                url: '/Admin/Products/GetAll',
                data: {
                    'txtSearch': txtSearch,
                    'txtSelect': txtSelect,
                    'txtStatus': txtStatus,
                    'page': pageNumber,
                    'pageSize': pageSize

                },
                success: function (res) {
                    res = JSON.parse(res);
                    console.log(res);
                    var row = ""
                    $.each(res.Data, function (key, value) {
                        key++;
                        var imgAll = "";
                        var imgData = value.Picture.split(";");
                        // tách chuỗi thành mảng ngăn cách bằng ;
                     
                        row += '<tr data-id="' + value.ProductId + '">';
                        row += '<td>' + value.ProductName + '</td>';
                        // duyệt để đưa các ảnh vào trường ảnh
                        for (var i = 0; i < imgData.length; i++) {
                            imgAll += '<img src="' + imgData[i]+ '" width="75" />';
                        }
                        row += '<td>' + imgAll + '</td>';
                        row += '<td>' + value.Price + '<sup>đ</sup></td>';
                        row += '<td>' + value.PriceSale + ' <sup>đ</sup></td>';
                        if (value.Show == false) {
                            row += '<td style="color:red"><b>Không hiển thị</b></td>';
                        } else {

                            row += '<td style="color:darkgreen"><b> Hiển thị</b></td>';}
                       
                        row += '</tr>'
                    })
                    $('#data').html(row);
                    // phân trang

                    var active = "";
                    var Previous = (res.CurrentPage - 1) > 1 ? (res.CurrentPage - 1) : 1;
                    var Next = (res.CurrentPage + 1) < res.PageOfNumber ? res.CurrentPage + 1 : res.PageOfNumber;
                    var pageData = '<li class="page-item"><a class="page - link" onclick="LoadData(' + Previous + ',' + pageSize + '); return false;" href="javascript:void(0)" >Previous</a></li>';
                    for (var i = 1; i < res.PageOfNumber + 1; i++) {
                        active = i == res.CurrentPage ? "active" : "";

                        pageData += '<li class="page-item ' + active + '" ><a class="page-link"  onclick="LoadData(' + i + ',' + pageSize + '); return false;" href="javascript:void(0)">' + i + '</a></li>';



                    }
                    pageData += '<li class="page-item"><a class="page-link" onclick="LoadData( ' + Next + ',' + pageSize + '); return false;" href="#" >Next</a></li>';
                    $('#pageData').html(pageData);
                }
            });
        }
        function Detail(id) {
            $.ajax({
                url: '/Admin/Products/Details',
                type: 'Get',
                data: { 'id': id },
                success: function (res) {
                    window.location.href = '/Admin/Products/Details/' + id;
                }
            })
        }
        // xóa
        function Delete(id) {
            $.ajax({
                type: 'Post',
                url: '/Admin/Products/Delete',
                data: { 'id': id },
                success: function (res) {
                    if (res == "success") {
                        alert("xóa thành công");
                        LoadData();
                    } else if (res == "bill") {
                        alert("Sản phầm này có trong đơn hàng, không xóa được");
                        LoadData();
                    } else {
                        alert("có lỗi xảy ra");
                        LoadData();
                    }
                }

            });
        }
        //  sửa, thêm mới
        function Post_Data(url, data) {
            $.ajax({
                type: 'POST',
                url: url,
                data: data,

                contentType: false, // không  header
                processData: false,// ko sử lý dữ liệu
                success: function (res) {
                    if (res == 'success') {
                        alert('cập nhập thành công');
                        $('#myModal').modal('hide');
                        LoadData();
                    } else {
                        alert('có lỗi !!')
                        LoadData();
                    }
                }
            });
        }
        //lấy dữ liệu
        var idEdit = "";
        function Get_By_Id(id) {
            $.ajax({
                type: "GET",
                url: '/Admin/Products/Get_By_Id',
                data: { 'id': id },
                success: function (res) {
                    res = JSON.parse(res);
                    console.log(res)
                    if (res != null) {
                        $('.Name').val(res.ProductName);
                            $('.CategoryDetailId').val(res.CategoryDetailId);
                        $('.SupplierId').val(res.SupplierId);
                       $('.Des').val(res.Description);
                        $('.Price').val(res.Price);
                        $('.PriceSale').val(res.PriceSale);
                        idEdit = res.ProductId;
                        if (res.Show == true) {
                            $('.Show').prop('checked', true);
                        } else {
                            $('.Show').prop('checked', false);
                        }
                        //xử lý ảnh 
                        var dataImg = "";
                        var data = res.Picture.split(";");
                        for (var i = 0; i < data.length; i++) {
                            dataImg += '<img src="' + data[i] + '" width="75" height="75" />'
                        }
                        // đọc ảnh
                        $('#show_img').html(dataImg);
                        $("#myModal").modal('show');
                    } else {
                        alert('Không thể lấy bản ghi !!');
                    }
                }

            });

        }
        // xử lý lọc theo Giá
        
        function changeNum() {   
            var Num = $('#txtSelect').val();
            if (Num == "Price") {// nếu chọn giá thì ô tìm kiếm thành type number
                $('#txtSearch').attr('type', 'number');
            } else {
                $('#txtSearch').attr('type', 'text');
            }

      
        }
        //xử lý đọc file ảnh
        var loadFile = function (event)
        {
            var show_input = "";
            var file = document.getElementById('fileInput');
            // đọc chiều dài trong mảng ảnh đưa vào
            for (var i = 0; i < file.files.length; i++) {
                show_input += '<img src="" id="' + i + 'img" width="75" height="75" />'
            }

            // hiển thị số thẻ ảnh theo số ảnh
            $('#show_img').html(show_input);                 
            for (var i = 0; i < file.files.length; i++) {
                // thêm Url cho từng thẻ ảnh
                var output = document.getElementById(''+i+'img');// mỗi một lần lặp thêm một Id vào thẻ và truyền Url theo Id đó
                output.src = URL.createObjectURL(event.target.files[i]);
            }
            
        };
        // xóa nội dung from
        function Clear() {
        }
        $(function () {
            
            var edit = false;
            LoadData();
           
            $('#btn-save').click(function () {
                
                    if (window.FormData != undefined) {
                        var data = new FormData();
                        //lấy đối tượng upload file
                        var Upfile = [];                   
                        var Upfile = document.getElementById('fileInput');
                        // duyệt tất cả các ảnh
                        for (var i = 0; i < Upfile.files.length; i++) {
                            // lấy các file ra khỏi đối tượng Upfile
                            data.append('picture', Upfile.files[i]);
                        }
                        data.append('ProductId', idEdit);
                        data.append('ProductName', $('.Name').val());
                        data.append('CategoryDetailId', $('.CategoryDetailId').val());
                        data.append('SupplierId', $('.SupplierId').val());
                        data.append('Description', $('.Des').val());
                        data.append('Price', $('.Price').val());
                        data.append('PriceSale', $('.PriceSale').val());
                        data.append('Show', $('.Show').prop('checked'));   
                    
                        if (edit == true) {
                            Post_Data("/Admin/Products/Edit", data);
                            edit = false;
                            idEdit = "";
                        } else {
                            Post_Data("/Admin/Products/Create", data);
                        }
                    } else {
                        alert('trình duyệt không hỗ trợ bảng, vui lòng chọn trình duyệt khác!!');
                    }
                



            })
            // css cho thuộc tính khí click vào bảng
            $(document).on('click', "#data>tr", function () {
                $("#data>tr").removeClass("active");
                $("#data>tr").removeAttr("style");
                $(this).addClass("active");
                $(this).css('background', '#CB3D3D');


            })
            // hàm xóa
            $("#btn-delete").click(function () {
                var id = $("#data>tr.active").data('id');
                if (id == undefined) {
                    alert('vui lòng click vào bản ghi cần xóa');
                } else {
                    Delete(id);
                }

            })
            $('#btn-edit').click(function () {
                var id = $('#data>tr.active').data('id');
                if (id == undefined) {
                    alert('vui lòng chọn bản ghi cần  cập nhật');
                } else {
                    Get_By_Id(id);
                    edit = true;

                }
            })
            $('#btn-detail').click(function () {
                var id = $('#data>tr.active').data('id');
                if (id == undefined) {
                    alert('vui lòng chọn bản ghi');
                } else {
                    Detail(id);
                }
            })
            $('#txtSearch').keyup(function () {
                var txtSearch = $('#txtSearch').val();
                var txtSelect = $('#txtSelect').val();
                var txtStatus = $('#Status').val();
                
                    LoadData(1, 3, txtSearch, txtSelect, txtStatus)
                
            })

        });

    </script>
}
